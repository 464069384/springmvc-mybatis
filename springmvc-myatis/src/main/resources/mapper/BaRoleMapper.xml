<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.web.dao.BaRoleMapper" >
  <resultMap id="BaseResultMap" type="com.web.model.BaRole" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="enable" property="enable" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, enable
  </sql>
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ba_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from ba_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.web.model.BaRole" useGeneratedKeys="true" keyProperty="id">
    insert into ba_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="enable != null" >
        enable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="enable != null" >
        #{enable,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateById" parameterType="com.web.model.BaRole" >
    update ba_role
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="enable != null" >
        enable = #{enable,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByName" parameterType="java.lang.String" resultType="java.lang.Integer">
  	select count(1) from ba_role where name = #{roleName}
  </select>
  
  <select id="selectAll" resultType="com.web.model.ManagerRoleQueryDto">
  	SELECT 
    	ba_role.id as roleId,
    	ba_role.name as roleName,
    	GROUP_CONCAT(ba_menu.name) as menuNames,
    	GROUP_CONCAT(CAST(ba_menu.id as char)) as menuIds
	FROM
    	ba_menu,
   		ba_role_menu,
    	ba_role
	WHERE
    	ba_menu.id = ba_role_menu.menu_id
	AND 
		ba_role.id = ba_role_menu.role_id
	group by 
		ba_role.id
  </select>
  
  <select id="selectAllRoleIds" resultType="java.lang.Integer">
  	select  id from ba_role
  </select>
  
</mapper>